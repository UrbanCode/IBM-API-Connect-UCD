<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    (c) Copyright IBM Corporation 2011, 2018.
    This is licensed under the following license.
    The Eclipse Public 1.0 License (http://www.eclipse.org/legal/epl-v10.html)
    U.S. Government Users Restricted Rights:  Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
-->

<plugin xmlns="http://www.urbancode.com/PluginXMLSchema_v1" xmlns:server="http://www.urbancode.com/PluginServerXMLSchema_v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <header>
    <identifier id="com.urbancode.air.plugin.apiconnect" name="IBM API Connect" version="8"/>
    <description>
      This plug-in includes steps to work with IBM API Connect when developing and publishing APIs and LoopBack applications.
    </description>
    <tag>IBM API Management/IBM API Connect</tag>
  </header>
  <step-type name="Login">
    <description>
Authenticate with an API Connect cloud through the management server. 
This step is a prerequisite for all other steps in the IBM API Connect plug-in. (apic login)
    </description>
    <properties>
      <property name="server" required="true">
        <property-ui type="textBox"
                     label="Server"
                     default-value="${p:component/apic.server}"
                     description="Specify the API Connect management server endpoint to authenticate with. For example, the IBM Bluemix endpoint is us.apiconnect.ibmcloud.com."/>
      </property>
      <property name="username" required="false">
        <property-ui type="textBox"
                     label="Username"
                     default-value="${p:apic.username}"
                     description="User name to use to authenticate with the API Connect management server."/>
      </property>
      <property name="password" required="false">
        <property-ui type="secureBox"
                     label="Password"
                     default-value="${p:apic.password}"
                     description="Password to use to authenticate with the API Connect management server."/>
      </property>
      <property name="apiKey" required="false">
        <property-ui type="secureBox"
                     label="API Key"
                     default-value="${p:apic.apikey}"
                     description="API Key used to authenticate with the API Connect management server."/>
      </property>
      <property name="realm" required="false">
        <property-ui type="textBox"
                     label="Realm"
                     default-value="${p?:apic.realm}"
                     description="The identity provider used to authenticate and the scope of the tasks 
                        that can be performed (I.E. provider/default-idp-2). This field is required 
                        if using the API Connect v2018 toolkit."/>
      </property>
      <property name="apicPath" required="false">
        <property-ui type="textBox"
                     label="APIC Tool Path"
                     default-value="${p?:component/apic.path}"
                     description="The full path to the apic command-line tool. For example: C:\Users\John\AppData\Roaming\npm\apic.cmd"/>
      </property>
      <property name="loggerLevel">
        <property-ui type="selectBox"
                     hidden="true"
                     label="Log4j Logging Level"
                     default-value="INFO"
                     description="Configure the level of Log4j messages to output to the console.
                        Selecting 'PARAMETER' will try resolve the log4jLevel property in any
                        UCD scope, and default to 'INFO' if log4jLevel is invalid or nonexistent."/>
        <value label="PARAMETER">${p?:log4jLevel}</value>
        <value label="ALL">ALL</value>
        <value label="TRACE">TRACE</value>
        <value label="DEBUG">DEBUG</value>
        <value label="INFO">INFO</value>
        <value label="WARN">WARN</value>
        <value label="ERROR">ERROR</value>
        <value label="FATAL">FATAL</value>
        <value label="OFF">OFF</value>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/securedata.jar:lib/jettison-1.1.jar:lib/commons-codec.jar:lib/CommonsUtil.jar:lib/log4j.jar:lib/log4j.jar"/>
      <arg file="login.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Logout">
    <description>
Remove local authentication credentials for an API Connect cloud. 
Run this step at the end of each deployment process. (apic logout)
    </description>
    <properties>
      <property name="server" required="true">
        <property-ui type="textBox"
                     label="Server"
                     default-value="${p:component/apic.server}"
                     description="Specify the API Connect management server endpoint to remove credentials from. For example, the IBM Bluemix endpoint is us.apiconnect.ibmcloud.com."/>
      </property>
      <property name="apicPath" required="false">
        <property-ui type="textBox"
                     label="APIC Tool Path"
                     default-value="${p?:component/apic.path}"
                     description="The full path to the apic command-line tool. For example: C:\Users\John\AppData\Roaming\npm\apic.cmd"/>
      </property>
      <property name="loggerLevel">
        <property-ui type="selectBox"
                     hidden="true"
                     label="Log4j Logging Level"
                     default-value="INFO"
                     description="Configure the level of Log4j messages to output to the console.
                        Selecting 'PARAMETER' will try resolve the log4jLevel property in any
                        UCD scope, and default to 'INFO' if log4jLevel is invalid or nonexistent."/>
        <value label="PARAMETER">${p?:log4jLevel}</value>
        <value label="ALL">ALL</value>
        <value label="TRACE">TRACE</value>
        <value label="DEBUG">DEBUG</value>
        <value label="INFO">INFO</value>
        <value label="WARN">WARN</value>
        <value label="ERROR">ERROR</value>
        <value label="FATAL">FATAL</value>
        <value label="OFF">OFF</value>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/securedata.jar:lib/jettison-1.1.jar:lib/commons-codec.jar:lib/CommonsUtil.jar:lib/log4j.jar"/>
      <arg file="logout.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Publish API Product Definitions">
    <description>Publish API product and referenced APIs to a catalog. (apic products:publish)</description>
    <properties>
      <property name="server" required="true">
        <property-ui type="textBox"
                     label="Server"
                     default-value="${p:component/apic.server}"
                     description="Specify the management server endpoint to publish to. For example, the IBM Bluemix endpoint is us.apiconnect.ibmcloud.com."/>
      </property>
      <property name="organization" required="true">
        <property-ui type="textBox"
                     label="Organization"
                     default-value="${p:component/apic.organization}"
                     description="Provider organization name."/>
      </property>
      <property name="catalog" required="true">
        <property-ui type="textBox"
                     label="Catalog"
                     default-value="${p:component/apic.catalog}"
                     description="The name of the catalog to deploy to."/>
      </property>
      <property name="definition" required="true">
        <property-ui type="textBox"
                     label="API Product Definitions"
                     default-value="${p:component/apic.definition}"
                     description="The full path to a YAML file that contains the API or product definitions."/>
      </property>
      <property name="stage" required="false">
        <property-ui type="checkBox"
                     label="Stage Status"
                     default-value="false"
                     description="Select to leave the product in the staged state, instead of moving to the published state."/>
      </property>
      <property name="space" required="false">
        <property-ui type="textBox"
                     label="Space"
                     description="Enter a space to deploy to (if applicable for this catalog)"/>
      </property>
      <property name="apicPath" required="false">
        <property-ui type="textBox"
                     label="APIC Tool Path"
                     default-value="${p?:component/apic.path}"
                     description="The full path to the apic command-line tool. For example: C:\Users\John\AppData\Roaming\npm\apic.cmd"/>
      </property>
      <property name="loggerLevel">
        <property-ui type="selectBox"
                     hidden="true"
                     label="Log4j Logging Level"
                     default-value="INFO"
                     description="Configure the level of Log4j messages to output to the console.
                        Selecting 'PARAMETER' will try resolve the log4jLevel property in any
                        UCD scope, and default to 'INFO' if log4jLevel is invalid or nonexistent."/>
        <value label="PARAMETER">${p?:log4jLevel}</value>
        <value label="ALL">ALL</value>
        <value label="TRACE">TRACE</value>
        <value label="DEBUG">DEBUG</value>
        <value label="INFO">INFO</value>
        <value label="WARN">WARN</value>
        <value label="ERROR">ERROR</value>
        <value label="FATAL">FATAL</value>
        <value label="OFF">OFF</value>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/securedata.jar:lib/jettison-1.1.jar:lib/commons-codec.jar:lib/CommonsUtil.jar:lib/log4j.jar"/>
      <arg file="productsPublish.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Set Configuration Variable">
    <description>
Set a configuration variable. You do not need to run the Login step before running this step. 
This is a wrapper step for the App and Catalog Identifier.
If you have access to the Identifier, run that command through the Shell step. (apic config:set)
    </description>
    <properties>
      <property name="server" required="true">
        <property-ui type="textBox"
                     label="Server"
                     default-value="${p:component/apic.server}"
                     description="Specify the management server endpoint to set the variable on. For example, the IBM Bluemix endpoint is us.apiconnect.ibmcloud.com."/>
      </property>
      <property name="organization" required="true">
        <property-ui type="textBox"
                     label="Organization"
                     default-value="${p:component/apic.organization}"
                     description="Provider organization name."/>
      </property>
      <property name="type" required="true">
        <property-ui type="selectBox"
                     label="Config Variable Type"
                     default-value=""
                     description="Select the type of variable to configure."/>
                <value label="App">app</value>
                <value label="Catalog">catalog</value>
      </property>
      <property name="name" required="true">
        <property-ui type="textBox"
                     label="App or Catalog Name"
                     default-value="${p:component/apic.app}"
                     description="Specify a name of an application or catalog to configure."/>
      </property>
      <property name="local" required="false">
        <property-ui type="checkBox"
                     label="Local"
                     default-value="false"
                     description="Select to set the local application configuration variable."/>
      </property>
      <property name="global" required="false">
        <property-ui type="checkBox"
                     label="Global"
                     default-value="false"
                     description="Select to set the global configuration variable."/>
      </property>
      <property name="apicPath" required="false">
        <property-ui type="textBox"
                     label="APIC Tool Path"
                     default-value="${p?:component/apic.path}"
                     description="The full path to the apic command-line tool. For example: C:\Users\John\AppData\Roaming\npm\apic.cmd"/>
      </property>
      <property name="loggerLevel">
        <property-ui type="selectBox"
                     hidden="true"
                     label="Log4j Logging Level"
                     default-value="INFO"
                     description="Configure the level of Log4j messages to output to the console.
                        Selecting 'PARAMETER' will try resolve the log4jLevel property in any
                        UCD scope, and default to 'INFO' if log4jLevel is invalid or nonexistent."/>
        <value label="PARAMETER">${p?:log4jLevel}</value>
        <value label="ALL">ALL</value>
        <value label="TRACE">TRACE</value>
        <value label="DEBUG">DEBUG</value>
        <value label="INFO">INFO</value>
        <value label="WARN">WARN</value>
        <value label="ERROR">ERROR</value>
        <value label="FATAL">FATAL</value>
        <value label="OFF">OFF</value>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/securedata.jar:lib/jettison-1.1.jar:lib/commons-codec.jar:lib/CommonsUtil.jar:lib/log4j.jar"/>
      <arg file="configSet.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Replace Product in Catalog">
    <description>
Replace a published or deprecated product in a catalog with another product (apic products:replace)
The old product will be retired. The new product must be either staged, published, or deprecated.
    </description>
    <properties>
      <property name="server" required="true">
        <property-ui type="textBox"
                     label="Server"
                     default-value="${p:component/apic.server}"
                     description="Specify the management server endpoint to set the variable on. For example, the IBM Bluemix endpoint is us.apiconnect.ibmcloud.com."/>
      </property>
      <property name="organization" required="true">
        <property-ui type="textBox"
                     label="Organization"
                     default-value="${p:component/apic.organization}"
                     description="Provider organization name."/>
      </property>
      <property name="catalog" required="true">
        <property-ui type="textBox"
                     label="Catalog"
                     default-value="${p:component/apic.catalog}"
                     description="Catalog name containing the product to be replaced."/>
      </property>
      <property name="oldProduct" required="true">
        <property-ui type="textBox"
                     label="Old Product"
                     default-value="${p:component/apic.oldProduct}"
                     description="The old product that will be replaced. 
                        Use the format: OLD_PRODUCT_NAME[:VERSION_NAME]. Note that the 
                        :VERSION_NAME portion is optional. If you don't supply it, the
                        first published version of the product will be replaced."/>
      </property>
      <property name="newProduct" required="true">
        <property-ui type="textBox"
                     label="New Product"
                     default-value="${p:component/apic.newProduct}"
                     description="The new product that will be replacing the old product. 
                        Use the format: NEW_PRODUCT_NAME:VERSION_NAME."/>
      </property>
      <property name="plans" required="true">
        <property-ui type="textAreaBox"
                     label="Plan Mappings"
                     default-value="${p:component/apic.planMappings}"
                     description="A newline separated list of old to new product plan mappings 
                        for the product replacement. Note that you must map all product plans.
                        Use the format: SOURCE_PLAN_NAME:TARGET_PLAN_NAME"/>
      </property>
       <property name="space" required="false">
        <property-ui type="textBox"
                     label="Space"
                     description="Enter a space to replace in (if applicable for this catalog)."/>
        </property>
      <property name="apicPath" required="false">
        <property-ui type="textBox"
                     label="APIC Tool Path"
                     default-value="${p?:component/apic.path}"
                     description="The full path or folder to the apic command-line tool. For example: C:\Users\John\AppData\Roaming\npm\apic.cmd"/>
      </property>
      <property name="loggerLevel">
        <property-ui type="selectBox"
                     hidden="true"
                     label="Log4j Logging Level"
                     default-value="INFO"
                     description="Configure the level of Log4j messages to output to the console.
                        Selecting 'PARAMETER' will try resolve the log4jLevel property in any
                        UCD scope, and default to 'INFO' if log4jLevel is invalid or nonexistent."/>
        <value label="PARAMETER">${p?:log4jLevel}</value>
        <value label="ALL">ALL</value>
        <value label="TRACE">TRACE</value>
        <value label="DEBUG">DEBUG</value>
        <value label="INFO">INFO</value>
        <value label="WARN">WARN</value>
        <value label="ERROR">ERROR</value>
        <value label="FATAL">FATAL</value>
        <value label="OFF">OFF</value>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/securedata.jar:lib/jettison-1.1.jar:lib/commons-codec.jar:lib/CommonsUtil.jar:lib/log4j.jar"/>
      <arg file="productsReplace.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Supersede Product in Catalog">
    <description>
Supersede a published product in a catalog with another product (apic products:replace).
The old product will be deprecated. The new product must be either staged, published, or deprecated.
    </description>
    <properties>
      <property name="server" required="true">
        <property-ui type="textBox"
                     label="Server"
                     default-value="${p:component/apic.server}"
                     description="Specify the management server endpoint to set the variable on. 
                        For example, the IBM Bluemix endpoint is us.apiconnect.ibmcloud.com."/>
      </property>
      <property name="organization" required="true">
        <property-ui type="textBox"
                     label="Organization"
                     default-value="${p:component/apic.organization}"
                     description="Provider organization name."/>
      </property>
      <property name="catalog" required="true">
        <property-ui type="textBox"
                     label="Catalog"
                     default-value="${p:component/apic.catalog}"
                     description="Catalog name containing the product to be replaced."/>
      </property>
      <property name="oldProduct" required="true">
        <property-ui type="textBox"
                     label="Old Product"
                     default-value="${p:component/apic.oldProduct}"
                     description="The old product that will be superseded. 
                        Use the format: OLD_PRODUCT_NAME[:VERSION_NAME]. Note that the 
                        :VERSION_NAME portion is optional. If you don't supply it, the
                        first published version of the product will be replaced."/>
      </property>
      <property name="newProduct" required="true">
        <property-ui type="textBox"
                     label="New Product"
                     default-value="${p:component/apic.newProduct}"
                     description="The new product that will be superseding the old product. 
                        Use the format: NEW_PRODUCT_NAME:VERSION_NAME."/>
      </property>
      <property name="plans" required="true">
        <property-ui type="textAreaBox"
                     label="Plan Mappings"
                     default-value="${p:component/apic.planMappings}"
                     description="A newline separated list of old to new product plan mappings 
                        for superseding the product. Note that you must map all product plans.
                        Use the format: SOURCE_PLAN_NAME:TARGET_PLAN_NAME"/>
      </property>
       <property name="space" required="false">
        <property-ui type="textBox"
                     label="Space"
                     description="Enter a space to supersede in (if applicable for this catalog)."/>
        </property>
      <property name="apicPath" required="false">
        <property-ui type="textBox"
                     label="APIC Tool Path"
                     default-value="${p?:component/apic.path}"
                     description="The full path or folder to the apic command-line tool. For example: C:\Users\John\AppData\Roaming\npm\apic.cmd"/>
      </property>
      <property name="loggerLevel">
        <property-ui type="selectBox"
                     hidden="true"
                     label="Log4j Logging Level"
                     default-value="INFO"
                     description="Configure the level of Log4j messages to output to the console.
                        Selecting 'PARAMETER' will try resolve the log4jLevel property in any
                        UCD scope, and default to 'INFO' if log4jLevel is invalid or nonexistent."/>
        <value label="PARAMETER">${p?:log4jLevel}</value>
        <value label="ALL">ALL</value>
        <value label="TRACE">TRACE</value>
        <value label="DEBUG">DEBUG</value>
        <value label="INFO">INFO</value>
        <value label="WARN">WARN</value>
        <value label="ERROR">ERROR</value>
        <value label="FATAL">FATAL</value>
        <value label="OFF">OFF</value>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/securedata.jar:lib/jettison-1.1.jar:lib/commons-codec.jar:lib/CommonsUtil.jar:lib/log4j.jar"/>
      <arg file="productsSupersede.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Create a Product (v10.x)">
    <description>
Create a new product using the create:product command in API connect v10.x.
    </description>    
    <properties>
      <property name="server" required="true">
        <property-ui type="textBox"
                     label="Server"
                     default-value="${p:component/apic.server}"
                     description="Specify the management server endpoint to set the variable on. 
                        For example, the IBM Bluemix endpoint is us.apiconnect.ibmcloud.com."/>
      </property>
      <property name="prodName" required="true">
        <property-ui type="textBox"
                     label="Product Name"
                     default-value=""
                     description="Specify a name with which you want to craete a new Product in IBM API connect, Ex: test-product."/>
      </property>
      <property name="prodVersion" required="true">
        <property-ui type="textBox"
                     label="Product version"
                     default-value=""
                     description="Specify a version with which you want to craete a new Product in IBM API connect, Ex: 1.0.0."/>
      </property>
      <property name="prodTitle" required="true">
        <property-ui type="textBox"
                     label="Product Title"
                     default-value=""
                     description="Specify a title with which you want to craete a new Product in IBM API connect Ex: Test Product."/>
      </property>
      <property name="apicPath" required="false">
        <property-ui type="textBox"
                     label="APIC Tool Path"
                     default-value="${p?:component/apic.path}"
                     description="The full path or folder to the apic command-line tool. For example: C:\Users\John\AppData\Roaming\npm\apic.cmd"/>
      </property>
      <property name="loggerLevel">
        <property-ui type="selectBox"
                     hidden="true"
                     label="Log4j Logging Level"
                     default-value="INFO"
                     description="Configure the level of Log4j messages to output to the console.
                        Selecting 'PARAMETER' will try resolve the log4jLevel property in any
                        UCD scope, and default to 'INFO' if log4jLevel is invalid or nonexistent."/>
        <value label="PARAMETER">${p?:log4jLevel}</value>
        <value label="ALL">ALL</value>
        <value label="TRACE">TRACE</value>
        <value label="DEBUG">DEBUG</value>
        <value label="INFO">INFO</value>
        <value label="WARN">WARN</value>
        <value label="ERROR">ERROR</value>
        <value label="FATAL">FATAL</value>
        <value label="OFF">OFF</value>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/securedata.jar:lib/jettison-1.1.jar:lib/commons-codec.jar:lib/CommonsUtil.jar:lib/log4j.jar"/>
      <arg file="createProduct.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
</plugin>
